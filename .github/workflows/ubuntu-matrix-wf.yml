name: "ubuntu matrix python app CI workflow "

on:
  push:
    branches: [ dev ]
 
  


jobs:


# https://docs.github.com/en/free-pro-team@latest/actions/guides/building-and-testing-python#using-a-specific-python-version
  build-python-tox-ubuntu-matrix:
    strategy:
      matrix:
        # python: [2.7, 3.7, 3.8]
        os: [ubuntu-latest, ubuntu-20.04, ubuntu-18.04]
        python: ["3.7", "3.8", "3.9"]
        app: [app1]
        # app: [app1,app2]
    name: "Running tests with tox (ubuntu matrix)"
    # runs-on: ubuntu-latest     
    runs-on: ${{ matrix.os }}   
    steps:
      - uses: actions/checkout@v2
      - name: "Setup Python"
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: "Install Tox and any other packages"
        run: pip install tox
      - name: "Run Tox"
        # Run tox using the version of Python in `PATH`
        # run: tox -e py
        run: cd ${{ matrix.app }} && tox -e py

# # https://docs.github.com/en/free-pro-team@latest/actions/guides/building-and-testing-python#using-a-specific-python-version
#   build-python-artifacts:
#     name: "Running tests with tox (matrix) on -ubuntu-latest - ubuntu-18.04"
#     runs-on: ubuntu-latest
#     strategy:
#         matrix:
#           python-version: [2.7, 3.5, 3.6, 3.7, 3.8]
#     steps:
#         - uses: actions/checkout@v2
#         - name: Setup Python # Set Python version
#           uses: actions/setup-python@v2
#           with:
#             python-version: ${{ matrix.python-version }}
#         # Install pip and pytest
#         - name: Install dependencies
#           run: |
#             python -m pip install --upgrade pip
#             pip install pytest
#         - name: Test with pytest
#           run: pytest tests.py --doctest-modules --junitxml=junit/test-results-${{ matrix.python-version }}.xml
#         - name: Upload pytest test results
#           uses: actions/upload-artifact@v2
#           with:
#             name: pytest-results-${{ matrix.python-version }}
#             path: junit/test-results-${{ matrix.python-version }}.xml
#           # Use always() to always run this step to publish test results when there are test failures
#           if: ${{ always() }}

        